def generate_pascal_triangle(num_rows):
    triangle = []
    
    for i in range(num_rows):
        row = [1] * (i + 1)  # Initialize row with 1s
        for j in range(1, i):
            row[j] = triangle[i - 1][j - 1] + triangle[i - 1][j]
        triangle.append(row)
    
    return triangle

def sum_of_nth_row_pascal_triangle(num_rows, row_number):
    triangle = generate_pascal_triangle(num_rows)
    nth_row = triangle[row_number - 1]
    row_sum = sum(nth_row)
    
    return triangle, row_sum

# Example usage
num_rows = int(input("Enter the number of rows: "))
row_number = int(input("Enter the row number (1-indexed): "))

triangle, row_sum = sum_of_nth_row_pascal_triangle(num_rows, row_number)

print("Pascal's Triangle:")
for row in triangle:
    print(row)

print(f"Sum of row {row_number}: {row_sum}")
